{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/user/user-details/user-details.component.css","webpack:///./src/app/user/user-details/user-details.component.html","webpack:///./src/app/user/user-details/user-details.component.ts","webpack:///./src/app/user/user-edit/user-edit.component.css","webpack:///./src/app/user/user-edit/user-edit.component.html","webpack:///./src/app/user/user-edit/user-edit.component.ts","webpack:///./src/app/user/user-list/user-list.component.css","webpack:///./src/app/user/user-list/user-list.component.html","webpack:///./src/app/user/user-list/user-list.component.ts","webpack:///./src/app/user/user-new/user-new.component.css","webpack:///./src/app/user/user-new/user-new.component.html","webpack:///./src/app/user/user-new/user-new.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/user/user.service.ts","webpack:///./src/app/user/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-user></app-user>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { UserService } from './user/user.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { UserDetailsComponent } from './user/user-details/user-details.component';\nimport { UserListComponent } from './user/user-list/user-list.component';\nimport { UserNewComponent } from './user/user-new/user-new.component';\nimport { UserEditComponent } from './user/user-edit/user-edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    UserDetailsComponent,\n    UserListComponent,\n    UserNewComponent,\n    UserEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  user-details works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3>User Edit Component</h3>\\n<form (submit)=\\\"update()\\\">\\n  <input type=\\\"text\\\" name=\\\"first_name\\\" [(ngModel)]=\\\"userEdit.first_name\\\">\\n  <input type=\\\"text\\\" name=\\\"last_name\\\" [(ngModel)]=\\\"userEdit.last_name\\\">\\n  <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"userEdit.email\\\">\\n  <input type=\\\"submit\\\">\\n  </form>\"","import { User } from './../user';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n  @Input() user: User;\n  @Output() updateUserEvent = new EventEmitter();\n  userEdit: User = new User();\n  \n  constructor() { }\n\n  ngOnInit() {\n    Object.assign(this.userEdit, this.user);\n  }\n\n  update(){\n    this.userEdit.editable = false;\n    this.updateUserEvent.emit({original: this.user, edited: this.userEdit})\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3>UserListComponent</h3>\\n<div *ngFor=\\\"let user of users\\\">\\n{{ user._id}} - {{ user.first_name}} - {{ user.last_name}} - {{user.email}} \\n<button (click)=\\\"destroy(user)\\\">Delete</button>\\n<button (click)= \\\"user.editable = !user.editable\\\">Edit</button>\\n<app-user-edit [user]=\\\"user\\\" (updateUserEvent)=\\\"update($event)\\\" *ngIf=\\\"user.editable\\\"></app-user-edit>\\n</div>\\n\"","import { User } from './../user';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n@Input() users; //allows us to two way bind with html\n//tells angular that we are sending data into this component\n@Output() destroyUserEvent = new EventEmitter();\n@Output() updateUserEvent = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  destroy(user: User){\n    this.destroyUserEvent.emit(user);\n  }\n\n  update(users){\n    this.updateUserEvent.emit(users)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3>User New Component</h3>\\n<form (submit)=\\\"create()\\\">\\n  <input type=\\\"text\\\" name=\\\"first_name\\\" [(ngModel)]=\\\"newUser.first_name\\\">\\n  <input type=\\\"text\\\" name=\\\"last_name\\\" [(ngModel)]=\\\"newUser.last_name\\\">\\n  <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"newUser.email\\\">\\n  <input type=\\\"submit\\\">\\n  </form>\\n\"","import { User } from './../user';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-user-new',\n  templateUrl: './user-new.component.html',\n  styleUrls: ['./user-new.component.css']\n})\nexport class UserNewComponent implements OnInit {\n  newUser = new User();\n\n  //component puts out new data that is generated by this event\n  @Output() createNewUserEvent = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  create(){\n    //call server to save\n\n    //new user event passes new user info to the create method\n    this.createNewUserEvent.emit(this.newUser);\n    this.newUser = new User(); //clears object by now pointing to a new user object (waiting for new input)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3>UserComponent</h3>\\n{{ users | json }}\\n<app-user-new (createNewUserEvent)=\\\"create($event)\\\"></app-user-new>\\n<app-user-list \\n[users]=\\\"users\\\" \\n(destroyUserEvent)=\\\"destroy($event)\\\"\\n(updateUserEvent)=\\\"update($event)\\\">\\n</app-user-list>\"","import { UserService } from './user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from \"./user\";\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  users: Array<User> = [\n    new User(1, \"First\", \"Last\", \"email@email.com\"),\n    new User(2, \"First\", \"Last\", \"email@email.com\"),\n    new User(3, \"First\", \"Last\", \"email@email.com\"),\n  ];\n\n  constructor(private _userService: UserService) { }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n\n  create(user: User){\n    this.users.push(user);\n  }\n\n  destroy(user: User){\n    const i = this.users.indexOf(user);\n    this.users.splice(i, 1);\n  }\n\n  update(users: any){\n    console.log(users);\n    const i = this.users.indexOf(users.original);\n    this.users[i] = users.edited;\n  }\n\n  getUsers(){\n    this._userService.getUsers()\n    .then(users => this.users = users) //redefine users array to be the users here\n  }\n\n}\n","import { User } from './user';\nimport { Http } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport \"rxjs/add/operator/map\";\nimport { Observable } from \"rxjs\";\n\n\n@Injectable()\nexport class UserService {\n\n  constructor(private _http: Http) { }\n\n  create(user: User){\n    return this._http.post(\"/users\", user)\n    .map(data => data.json()).toPromise()\n  }\n\n  destroy(user: User){\n    return this._http.delete(\"/users/\"+user._id)\n    .map(data => data.json()).toPromise()\n  }\n\n  update(user: User){\n    return this._http.put(\"/users/\"+user._id, user)\n    .map(data => data.json()).toPromise()\n  }\n\n  getUsers(){\n    return this._http.get(\"/users\")\n    .map(data => data.json()).toPromise()\n  }\n\n  getUser(user: User){\n    return this._http.get(\"/users/\"+user._id)\n    .map(data => data.json()).toPromise()\n  }\n\n}\n","export class User {\n    constructor(\n        public _id: number = Math.floor(Math.random()*100),\n        public first_name: string = \"\",\n        public last_name: string = \"\",\n        public email: string = \"\",\n        public editable: boolean = false\n    ){}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}